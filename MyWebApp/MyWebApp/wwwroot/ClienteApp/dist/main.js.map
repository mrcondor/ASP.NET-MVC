{"version":3,"sources":["webpack:///./ClienteApp/$_lazy_route_resource lazy namespace object","webpack:///./ClienteApp/app/app.component.css","webpack:///./ClienteApp/app/app.component.html","webpack:///./ClienteApp/app/app.component.ts","webpack:///./ClienteApp/app/app.module.ts","webpack:///./ClienteApp/app/loja/carrinho/carrinho.component.html","webpack:///./ClienteApp/app/loja/carrinho/carrinho.component.ts","webpack:///./ClienteApp/app/loja/efetivarCompra/efetivarCompra.component.html","webpack:///./ClienteApp/app/loja/efetivarCompra/efetivarCompra.component.ts","webpack:///./ClienteApp/app/loja/listaProduto.component.css","webpack:///./ClienteApp/app/loja/listaProduto.component.html","webpack:///./ClienteApp/app/loja/listaProduto.component.ts","webpack:///./ClienteApp/app/loja/loja.component.html","webpack:///./ClienteApp/app/loja/loja.component.ts","webpack:///./ClienteApp/app/modelos/pedido.ts","webpack:///./ClienteApp/app/modelos/produto.ts","webpack:///./ClienteApp/app/servicos/dataService.ts","webpack:///./ClienteApp/environments/environment.ts","webpack:///./ClienteApp/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./ClienteApp/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet>\\r\\n\\r\\n</router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my first APP';\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { AppComponent } from './app.component';\r\nimport { ListaProduto } from './loja/listaProduto.component'\r\nimport { DataService } from './servicos/dataService';\r\nimport { Carrinho } from './loja/carrinho/carrinho.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { Loja } from './loja/loja.component';\r\nimport { EfetivarCompra } from './loja/efetivarCompra/efetivarCompra.component';\r\n\r\n\r\nlet router = [\r\n    { path: \"\", component: Loja },\r\n    { path: \"efetivarCompra\", component: EfetivarCompra }\r\n]\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        ListaProduto,\r\n        Carrinho,\r\n        Loja,\r\n        EfetivarCompra\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpModule,\r\n        RouterModule.forRoot(router, {\r\n            useHash: true,\r\n            enableTracing: false\r\n        })\r\n    ],\r\n    providers: [DataService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h3>Carrinho de Compras</h3>\\r\\n\\r\\n<div>Contagem: {{ data.pedido.ItensPedidos.length }}</div>\\r\\n<div>Total: {{data.pedido.total | currency:\\\"R$\\\":true}}</div>\\r\\n\\r\\n<table class=\\\"=table table-condensed table-hover\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <td>Nome</td>\\r\\n            <td>Quantidade</td>\\r\\n            <td>Preço</td>\\r\\n            <td>Total</td>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let item of data.pedido.ItensPedidos\\\">\\r\\n            <td>{{item.Produto.nome}}</td>\\r\\n            <td>{{item.Quantidade}}</td>\\r\\n            <td>{{item.Produto.preco | currency:\\\"R$\\\":true}}</td>\\r\\n            <td>{{item.Produto.preco * item.Quantidade | currency:\\\"R$\\\":true}}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n<a routerLink=\\\"efetivarCompra\\\" class=\\\"btn btn-success\\\" *ngIf=\\\"data.pedido.ItensPedidos.length > 0\\\">Efetivar Compra</a>\"","﻿import { Component, OnInit } from \"@angular/core\"\r\nimport { DataService } from \"../../servicos/dataService\";\r\nimport { Produto } from \"../../modelos/produto\"\r\n\r\n@Component({\r\n    selector: \"carrinho\",\r\n    templateUrl: \"./carrinho.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class Carrinho implements OnInit {\r\n    constructor(private data: DataService) {\r\n        this.produtos = data.produtos;\r\n    }\r\n\r\n    public produtos: Produto[];\r\n\r\n    ngOnInit(): void {\r\n        this.data.carregarProdutos().subscribe(() => this.produtos = this.data.produtos);\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <h3>Efetivar Compra</h3>\\r\\n    <div *ngIf=\\\"mensagem\\\" class=\\\"alert alert-warning\\\">{{mensagem}}</div>\\r\\n    <table class=\\\"table table-bordered table-hover\\\">\\r\\n        <thead>\\r\\n            <tr *ngFor=\\\"let item of data.pedido.ItensPedidos\\\">\\r\\n                <td><img src=\\\"/img/WOW1.jpg\\\" alt=\\\"Imagem Maneira\\\" width=\\\"200\\\" height=\\\"200\\\" /></td>\\r\\n                <td>{{item.Produto.nome}}</td>\\r\\n                <td>{{item.Quantidade}}</td>\\r\\n                <td>{{item.Produto.preco | currency:\\\"R$:true\\\"}}</td>\\r\\n                <td>{{(item.Produto.preco * item.Quantidade) | currency:\\\"R$\\\":true}}</td>\\r\\n            </tr>\\r\\n        </thead>\\r\\n    </table>\\r\\n    <div class=\\\"col-xs-4 col-xs-offset-8 text-right\\\">\\r\\n        <table class=\\\"table table-condensed\\\">\\r\\n            <tr>\\r\\n                <td>Total</td>\\r\\n                <td>{{data.pedido.total | currency:\\\"R$\\\":true}}</td>\\r\\n            </tr>\\r\\n            <tr>\\r\\n                <td>Frete</td>\\r\\n                <td>R$ 0.00</td>\\r\\n            </tr>\\r\\n        </table>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"onEfetivarCompra()\\\">Comprar</button>\\r\\n        <a routerLink=\\\"\\\" class=\\\"btn btn-info\\\">Cancelar</a>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from '@angular/core';\r\nimport { DataService } from '../../servicos/dataService';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    selector: \"efetivar\",\r\n    templateUrl: \"efetivarCompra.component.html\",\r\n    styleUrls:[]\r\n})\r\nexport class EfetivarCompra {\r\n    mensagem: string;\r\n    constructor(private data: DataService, public router: Router) {\r\n\r\n    }\r\n\r\n    onEfetivarCompra() {\r\n        this.data.efetivarCompra()\r\n            .subscribe(sucesso => {\r\n                if (sucesso) {\r\n                    this.router.navigate([\"\"]);\r\n                }\r\n            }, erro => {\r\n                this.mensagem = \"Falhar ao salvar pedido\";\r\n            })\r\n    }\r\n}","module.exports = \".produto-info img {\\r\\n    max-width:250px;\\r\\n    margin:0 2px;\\r\\n    border: solid 1px black;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-4 well\\\" *ngFor=\\\"let p of produtos\\\">\\r\\n        <img src=\\\"/img/WOW1.jpg\\\" alt=\\\"Imagem Maneira\\\" width=\\\"200\\\" height=\\\"200\\\" />\\r\\n        <h4>{{p.nome}}</h4>\\r\\n        <h3><strong>{{p.preco | currency: \\\"R$\\\":true}}</strong></h3>\\r\\n        <button id=\\\"meu-button produto-info\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"adicionarProduto(p)\\\">Comprar</button>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component, OnInit } from \"@angular/core\"\r\nimport { DataService } from \"../servicos/dataService\";\r\nimport { Produto } from \"../modelos/produto\"\r\n\r\n@Component({\r\n    selector: \"lista-produto\",\r\n    templateUrl: \"./listaProduto.component.html\",\r\n    styleUrls: [\"./listaProduto.component.css\"]\r\n})\r\n\r\nexport class ListaProduto implements OnInit {\r\n    constructor(private data: DataService) {\r\n        this.produtos = data.produtos;\r\n    }\r\n\r\n    public produtos: Produto[];\r\n\r\n    ngOnInit(): void {\r\n        this.data.carregarProdutos().subscribe(() => this.produtos = this.data.produtos);\r\n    }\r\n\r\n    adicionarProduto(produto: Produto) {\r\n        this.data.adicionarProduto(produto);\r\n    }\r\n}","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-7\\\">\\r\\n        <lista-produto></lista-produto>\\r\\n    </div>\\r\\n    <div class=\\\"col-xs-5\\\">\\r\\n        <div class=\\\"well well-sm\\\">\\r\\n            <carrinho></carrinho>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: \"loja\",\r\n    templateUrl: \"loja.component.html\",\r\n    styleUrls: []\r\n})\r\nexport class Loja {\r\n\r\n}","﻿import { Produto } from \"../modelos/produto\";\r\nimport * as _ from \"lodash\";\r\n\r\nexport class Pedido {\r\n    public Id: number;\r\n    public DataPedido: Date;\r\n    public ItensPedidos: Array<ItemPedido> = new Array<ItemPedido>();\r\n\r\n    get total(): number {\r\n        return _.sum(_.map(this.ItensPedidos, i => i.Produto.preco * i.Quantidade));\r\n    }\r\n}\r\n\r\nexport class ItemPedido {\r\n    public Id: number;\r\n    public Produto: Produto;\r\n    public Quantidade: number;\r\n\r\n    constructor() {\r\n        this.Produto = new Produto();\r\n    }\r\n}","﻿export class Produto {\r\n    id: number;\r\n    descricao: string;\r\n    nome: string;\r\n    preco: number;\r\n}","﻿import { Http, Response } from \"@angular/http\";\r\nimport { Observable } from 'rxjs';\r\nimport { Produto } from \"../modelos/produto\";\r\nimport { Pedido, ItemPedido } from \"../modelos/pedido\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class DataService {\r\n    constructor(private http: Http) {\r\n\r\n    }\r\n    public produtos: Produto[];\r\n    public pedido: Pedido = new Pedido();\r\n\r\n    carregarProdutos(): Observable<Produto[]> {\r\n        return this.http.get(\"/api/produto\").map((result: Response) => this.produtos = result.json());\r\n    }\r\n\r\n    adicionarProduto(produto: Produto) {\r\n        let itemSelecionado = this.pedido.ItensPedidos.find(i => i.Produto.id == produto.id);\r\n        if (itemSelecionado) {\r\n            itemSelecionado.Quantidade++;\r\n        } else {\r\n\r\n            let item: ItemPedido;\r\n            item = new ItemPedido();\r\n            item.Produto.id = produto.id;\r\n            item.Produto.nome = produto.nome;\r\n            item.Produto.descricao = produto.descricao;\r\n            item.Produto.preco = produto.preco;\r\n            item.Quantidade = 1;\r\n\r\n            this.pedido.ItensPedidos.push(item);\r\n        }\r\n    }\r\n\r\n    public efetivarCompra() {\r\n        return this.http.post(\"/api/pedido\", this.pedido)\r\n            .map(resposta => {\r\n                this.pedido = new Pedido();\r\n                return true;\r\n            })\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}